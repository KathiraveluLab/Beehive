name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
          --health-start-period 30s

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Wait for MongoDB
      run: |
        for i in {1..60}; do
          if mongosh --eval 'db.runCommand({ ping: 1 })' > /dev/null 2>&1; then
            echo "MongoDB is ready!"
            exit 0
          fi
          echo "Waiting for MongoDB... (attempt $i/60)"
          sleep 2
        done
        echo "MongoDB did not become ready in time"
        exit 1
        
    - name: Run tests
      env:
        MONGODB_URI: mongodb://localhost:27017/beehive_test
        SECRET_KEY: beehive_test
        TESTING: true
        GOOGLE_CLIENT_ID: dummy-client-id
        GOOGLE_CLIENT_SECRET: dummy-client-secret
        PYTHONPATH: ${{ github.workspace }}
      run: |
        python -c "
        import pymongo
        import time
        client = pymongo.MongoClient('mongodb://localhost:27017')
        for i in range(5):
            try:
                client.admin.command('ping')
                break
            except:
                if i == 4:
                    raise
                time.sleep(2)
        "
        pytest -v --cov=app --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 